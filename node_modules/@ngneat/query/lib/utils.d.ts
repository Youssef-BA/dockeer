import { DefaultError, QueryObserverResult } from '@tanstack/query-core';
import { Observable } from 'rxjs';
export declare function toPromise<T>({ source, signal, }: {
    source: Observable<T>;
    signal?: AbortSignal;
}): Promise<T>;
export declare function createSuccessObserverResult<T, Error = DefaultError>(data: T): QueryObserverResult<T, Error>;
export declare function createPendingObserverResult<T = unknown, Error = DefaultError>(): QueryObserverResult<T, Error>;
export declare function shouldThrowError<T extends (...args: Array<any>) => boolean>(throwError: boolean | T | undefined, params: Parameters<T>): boolean;
